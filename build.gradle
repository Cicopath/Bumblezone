import net.fabricmc.loom.task.RemapJarTask

buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
		classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.2.1'
	}
}

plugins {
	id "net.darkhax.curseforgegradle" version "1.0.7"
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.1.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = "${project.modid}_fabric"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/the_bumblezone.accesswidener")
}

repositories {
	maven { url "https://api.modrinth.com/maven/" }
	maven { url "https://www.cursemaven.com" }
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven {
		url "https://nexus.resourcefulbees.com/repository/maven-public/"
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'dev.cafeteria'
		}
	}
	repositories {
		maven { url "https://maven.shedaniel.me" }
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings minecraft.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
		force = true //Force the version we want rather than trusting Gradle to pick it over transitive suggestions
	}

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_version}"

	modImplementation "dev.cafeteria:fake-player-api:${project.fake_player_version}"
	include "dev.cafeteria:fake-player-api:${project.fake_player_version}"

	modImplementation ("maven.modrinth:modmenu:${project.mod_menu_version}") { transitive = false }

	modRuntimeOnly ("com.telepathicgrunt:FeatureNBTDeadlockBeGone-Fabric:${project.NBTDBG_version}") { transitive = false }

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	//modRuntimeOnly "curse.maven:shutup_experimental_settings-401978:3545078"

	//modRuntimeOnly "curse.maven:requiem-265729:3639233"
	//modImplementation ("curse.maven:mobcatcher-498389:3575752") { transitive = false }
	//modCompileOnly ("curse.maven:charm-318872:3355096") { transitive = false }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from "LICENSE"
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/modrinth.gradle'
task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = "$System.env.CURSEFORGEKEY"
	int projectId = 363949
	String changelogText = new File("CHANGELOG.md").getText('UTF-8')

	def mainFile = upload(projectId, remapJar)
	mainFile.changelog = changelogText
	mainFile.changelogType = "markdown"
	mainFile.releaseType = "beta"
	mainFile.displayName = "The Bumblezone v${project.mod_version} (${project.minecraft_version} MC)"
	mainFile.addRequirement("cloth-config")
	mainFile.addRequirement("fabric-api")
	mainFile.addRequirement("feature-nbt-deadlock-be-gone")
}

task buildAndRelease{}
tasks.publish.mustRunAfter tasks.build
tasks.publishCurseForge.mustRunAfter tasks.publish
tasks.publishModrinth.mustRunAfter tasks.publish
tasks.publishCurseForge.dependsOn("remapJar")
tasks.buildAndRelease.dependsOn(tasks.build, tasks.publish, tasks.publishCurseForge, tasks.publishModrinth)
