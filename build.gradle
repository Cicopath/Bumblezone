buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
}

plugins {
	alias(libs.plugins.quilt.loom)
	id 'maven-publish'
	id "net.darkhax.curseforgegradle" version "1.0.7"
	id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = "${project.modid}_quilt"
version = "${project.mod_version}+${libs.versions.minecraft.get()}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/the_bumblezone.accesswidener")
}

configurations.all {
	resolutionStrategy.dependencySubstitution {
		substitute module('net.fabricmc:fabric-loader') using module(libs.quilt.loader.get().toString())
		all { DependencySubstitution dependency ->
			if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.group == 'net.fabricmc.fabric-api') {
				if (dependency.requested.module == 'fabric-api')
					dependency.useTarget libs.quilted.fabric.api.get().toString()
				else
					dependency.useTarget 'org.quiltmc.quilted-fabric-api' + ':' + dependency.requested.module + ':' + libs.versions.quilted.fabric.api.get()
			}
		}
	}
}

repositories {
	maven { url "https://api.modrinth.com/maven/" }
	maven { url "https://www.cursemaven.com" }
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven {
		url "https://nexus.resourcefulbees.com/repository/telepathicgrunt/"
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'dev.cafeteria'
		}
	}
	repositories {
		maven { url "https://maven.shedaniel.me" }
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		url 'https://jitpack.io'
	}
}

dependencies {
	minecraft libs.minecraft
	mappings( loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
		officialMojangMappings()
	})
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api

	annotationProcessor"com.github.LlamaLad7:MixinExtras:${libs.versions.mixinextra.get()}"
	modImplementation "com.github.LlamaLad7:MixinExtras:${libs.versions.mixinextra.get()}"
	include "com.github.LlamaLad7:MixinExtras:${libs.versions.mixinextra.get()}"

	modImplementation "maven.modrinth:midnightlib:${libs.versions.midnightlib.get()}"
	include "maven.modrinth:midnightlib:${libs.versions.midnightlib.get()}"

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${libs.versions.cardinal.get()}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${libs.versions.cardinal.get()}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${libs.versions.cardinal.get()}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${libs.versions.cardinal.get()}"

	modImplementation "dev.cafeteria:fake-player-api:${libs.versions.fake.player.get()}"
	include "dev.cafeteria:fake-player-api:${libs.versions.fake.player.get()}"

	modCompileOnly "maven.modrinth:modmenu:${libs.versions.mod.menu.get()}"
	modRuntimeOnly "maven.modrinth:modmenu:${libs.versions.mod.menu.get()}"

	modCompileOnly "dev.emi:emi:${libs.versions.emi.get()}"

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${libs.versions.rei.get()}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${libs.versions.rei.get()}"
	modRuntimeOnly ("me.shedaniel:RoughlyEnoughItems-fabric:${libs.versions.rei.get()}") {
		exclude(group: "net.fabricmc.fabric-api")
		exclude(group: "net.fabricmc", module: "fabric-loader")
	}
	modRuntimeOnly ("dev.architectury:architectury-fabric:${libs.versions.architectury.get()}") {
		exclude(group: "net.fabricmc.fabric-api")
		exclude(group: "net.fabricmc", module: "fabric-loader")
	}
	modRuntimeOnly ("me.shedaniel.cloth:cloth-config-fabric:${libs.versions.cloth.config.get()}") {
		exclude(group: "net.fabricmc.fabric-api")
		exclude(group: "net.fabricmc", module: "fabric-loader")
	}

	//modCompileOnlyApi "mezz.jei:jei-${jei_mc}-common-api:${jei}"
	//modCompileOnlyApi "mezz.jei:jei-${jei_mc}-fabric-api:${jei}"
	//modRuntimeOnly "mezz.jei:jei-${jei_mc}-common:${jei}"
	//modRuntimeOnly "mezz.jei:jei-${jei_mc}-fabric:${jei}"

	//modCompileOnly "curse.maven:friends_and_foes-551364:3725313"
	//modCompileOnly "curse.maven:bee_better-351600:3726160"
	//modRuntimeOnly "curse.maven:architectury-419697:3717905"
	//modRuntimeOnly "curse.maven:bee_better-351600:3726160"

	modRuntimeOnly "com.telepathicgrunt:CommandStructures-Fabric:${libs.versions.commandstructures.get()}"
	modRuntimeOnly "com.telepathicgrunt:StructureVoidToggle-Fabric:${libs.versions.structurevoidtoggle.get()}"

	//modCompileOnly "curse.maven:friends_and_foes-551364:3827720"
	//modCompileOnly "curse.maven:bee_better-351600:3726160"

	//modRuntimeOnly "curse.maven:architectury-419697:3717905"
	//modRuntimeOnly "curse.maven:requiem-265729:3639233"
	//modImplementation ("curse.maven:mobcatcher-498389:3575752") { transitive = false }
	//modCompileOnly ("curse.maven:charm-318872:3355096") { transitive = false }
}

apply from: 'gradle/processresources.gradle'

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release.set(17)
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}"}
	}
}

apply from: 'gradle/maven.gradle'

String fileContents = new File("CHANGELOG.md").getText('UTF-8')

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = "$System.env.CURSEFORGEKEY"
	int projectId = 363949

	def mainFile = upload(projectId, remapJar)
	mainFile.changelog = fileContents
	mainFile.changelogType = "markdown"
	mainFile.releaseType = "release"
	mainFile.displayName = "The Bumblezone v${project.mod_version} (${libs.versions.minecraft.get()} MC Quilt)"
	mainFile.addGameVersion("1.19.1")
	mainFile.addGameVersion("1.19.2")
	mainFile.addModLoader("Quilt")
	mainFile.addRequirement("midnightlib")
	mainFile.addRequirement("qsl")
}

modrinth {
	token = System.getenv("MODRINTH")
	versionName = "The Bumblezone"
	versionNumber = project.version + "+quilt"
	projectId = "eA8SXqWL"
	uploadFile = remapJar
	changelog = fileContents
	versionType = "RELEASE"
	gameVersions = ["1.19.1"]
	gameVersions = ["1.19.2"]
	loaders = ["quilt"]
	dependencies {
		required.project "qsl"
		required.project "midnightlib"
	}
}

task buildAndRelease{}
tasks.publish.mustRunAfter tasks.build
tasks.publishCurseForge.mustRunAfter tasks.publish
tasks.modrinth.mustRunAfter tasks.publish
tasks.publishCurseForge.dependsOn("remapJar")
tasks.buildAndRelease.dependsOn(tasks.build, tasks.publish, tasks.publishCurseForge, tasks.modrinth)
